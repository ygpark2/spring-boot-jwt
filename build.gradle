buildscript {
    ext {
        springBootVersion = '1.3.0.RELEASE'
        springLoadedVersion = "1.2.4.RELEASE"
        springHateoasVersion = "0.19.0.RELEASE"
        springOXMVersion = "4.2.3.RELEASE"
        minimalJsonVersion = "0.9.4"
        lombokVersion = "1.16.6"
        queryDSLVersion = "3.6.9"
        hsqldbVersion = "2.3.2"
        mysqldbVersion = "5.1.36"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.springframework:springloaded:${springLoadedVersion}")
    }

}

apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'spring-boot'
apply plugin: 'idea'
apply plugin: 'eclipse'

jar {
    baseName = 'ecsi-epengine'
    version = '0.0.1-SNAPSHOT'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

sourceSets {
    generated {
        java {
            srcDirs = ['src/main/generated']
        }
    }
}

configurations {
    querydslapt
    compile.exclude group:'ch.qos.logback'
    // compile.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

dependencies {

    compile "org.springframework.boot:spring-boot-starter-web"

    // tag::jdbc[]
    compile "org.springframework.boot:spring-boot-starter-jdbc"
    // tag::log4j[]
    compile "org.springframework.boot:spring-boot-starter-log4j2"
    // tag::actuator[]
    compile "org.springframework.boot:spring-boot-starter-actuator"

    compile "org.springframework.boot:spring-boot-starter-data-jpa"

    compile "org.springframework.boot:spring-boot-starter-jersey"
    compile "org.springframework.boot:spring-boot-starter-security"

    // compile "de.codecentric:spring-boot-admin-server:1.2.4"
    // compile "de.codecentric:spring-boot-admin-server-ui:1.2.4"
    // compile "de.codecentric:spring-boot-admin-starter-client:1.2.4"

    compile "io.jsonwebtoken:jjwt:0.6.0"

    // needed when @EnableEntityLinks is used
    compile "org.springframework.plugin:spring-plugin-core:1.1.0.RELEASE"

    compile group: "org.projectlombok", name: "lombok", version: "${lombokVersion}"

    // compile "com.mysema.querydsl:querydsl-core:$queryDslVersion"
    compile "com.mysema.querydsl:querydsl-jpa:${queryDSLVersion}"
    querydslapt "com.mysema.querydsl:querydsl-apt:${queryDSLVersion}"

    // HSQLDB for embedded database support
    runtime "org.hsqldb:hsqldb:${hsqldbVersion}"

    compile group: 'com.eclipsesource.minimal-json', name: 'minimal-json', version: "${minimalJsonVersion}"

    compile group: 'mysql', name: 'mysql-connector-java', version: "${mysqldbVersion}"

    // Utilities
    // compile group: "com.google.guava", name: "guava", version: "18.0"

    // AssertJ
    testCompile "org.assertj:assertj-core:1.7.0"
    testCompile "org.springframework.boot:spring-boot-starter-test"

    // Groovy
    testCompile "org.codehaus.groovy:groovy-all:2.4.3"
    testCompile "org.codehaus.groovy.modules.http-builder:http-builder:0.7.1"
    testCompile "com.github.groovy-wslite:groovy-wslite:1.1.0"
    testCompile "org.spockframework:spock-spring:1.0-groovy-2.4"

    // JUnitParams
    testCompile "pl.pragmatists:JUnitParams:1.0.4"
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.querydslapt
    options.compilerArgs = [
            "-proc:only",
            "-processor", "com.mysema.query.apt.jpa.JPAAnnotationProcessor"
    ]
    destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
    dependsOn generateQueryDSL
    source generateQueryDSL.destinationDir
}

compileGeneratedJava {
    dependsOn generateQueryDSL
    options.warnings = false
    classpath += sourceSets.main.runtimeClasspath
}

clean {
    delete sourceSets.generated.java.srcDirs
}

idea {
    module {
        inheritOutputDirs = false
        outputDir = file("$buildDir/classes/main/")
        sourceDirs += file('src/main/generated')
    }
}
eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
        flatDir {
            dirs 'repos'
        }
    }
}

springBoot {
    mainClass = "com.kdn.ecsi.console.Application"
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.6'
}
